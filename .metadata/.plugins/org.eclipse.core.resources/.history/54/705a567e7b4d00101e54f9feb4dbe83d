package review;

import java.util.Scanner;

public class Review01 {

	public static void main(String[] args) {
		//입력클래스 import
		Scanner sc = new Scanner(System.in);
		
		// 1. 한 개의 정수를 입력받아 짝수 홀수 출력하기 - 삼항연산자 이용
		
		// 1)입력 메세지 출력
		System.out.print("정수 1개를 입력하세요. : ");
		// 2)입력받을 정수를 저장할 정수형변수 생성.
		int num = 0;
		// 3)nextLine()으로 받고, Integer.parseInt()로 형변환
		num = Integer.parseInt(sc.nextLine());
		// 4) 출력 : 삼항연산자 이용.
		System.out.println((num % 2 == 0 ? num + "은(는) 짝수입니다." : num + "은(는) 홀수입니다."));
	
		
		// 2. 한개의 정수를 입력받아 양수, 음수 , 0 판별
		
		//1)입력 메세지 출력
		System.out.print("정수 1개를 입력하세요.(부호판별) : ");
		//2)입력받을 정수를 저장할 정수형변수 선언
		int num1 = 0;
		//3)nextLine으로 입력받고 Integer.pasreInt()로 형변환
		num1 = Integer.parseInt(sc.nextLine());
		//4)if else if else 조건문작성
		if(num1 == 0) {
			System.out.printf("%d은 0입니다.\n", num1);
		}
		else if(num1 > 0) {
			System.out.printf("%d은(는) 양수입니다.\n", num1);
		}
		else {
			System.out.printf("%d은(는) 음수입니다.\n", num1);
		}
		
		
		
		// 3. 나이를 입력받아서 다음 기준으로 출력하기
		
		//1) 입력메세지 출력
		//2) 나이변수 입력메소드 nextInt()
		//3) 조건문 if~else if~else 
			// 3-1) if(나이 <= 12){
//		어린이입니다.
//		if(나이 < 0){break;}
//		}
			// 3-2) else if(나이 <= 19) {청소년입니다.} + while 반복문사용하기
		 	// 3-3) else{성인입니다.}
		
		while(true) {
			int age = sc.nextInt();
			if(age < 0) {
				System.out.println("다시 입력하세요.");
				continue;
			}
		
			if(age <= 12) {
				System.out.println("어린이입니다.");
				break;
			}
			else if(age <= 19) {
				System.out.println("청소년입니다.");
				break;
			}
			else {
				System.out.println("성인입니다.");
				break;
			}
		}
		
		// 4. 세 개의 정수를 입력받아 큰숫자 순으로 정렬하여 출력. 서로 다른 세숫자.
		// 입력 메세지 출력
		System.out.print("정수 3개 입력 : ");
		// 정수 3개 선언 및 초기화
		int number1 = sc.nextInt();
		int number2 = sc.nextInt();
		int number3 = sc.nextInt();
		
		// 중복된 숫자일 경우 중복된 숫자는 안됩니다 출력
		if(number1 == number2 || number2 == number3 || number1 == number3) {
			System.out.println("중복된 숫자는 안됩니다.");
		}else {
			int first=0;
			int second=0;
			int third=0;
			
			// 모든 경우를 비교하여 내림차순으로 정렬
			if(number1 > number2 && number1 > number3)
			{	// number1이 가장 큰 경우. -> (number2와 number3비교)
				if(number2 > number3) {
					first = number1;
					// num1 > num2 > num3순서
					second = number2;
					third = number3;
				}
				else { // num1 > num3 > num2인경우
					second = number3;
					third = number2;
				}
				
			}else if(number2 > number1 && number2 > number3) {
				// number2가 가장 큰 경우. -> (number1과 number3 비교)
				first = number2;
				if(number1 > number3) {
					second = number1;
					third = number3;
				}
				else {
					second = number3;
					third = number1;
				}
			}else {
				// number3가 가장 큰 경우
				first = number3;
				if(number1 > number2) {
					second = number1;
					third = number2;
				}
				else {
					second = number2;
					third = number1;
				}
			}
			
			System.out.println("정렬된 숫자 : "+ first + second + third);
		}
		
		sc.nextLine(); // 버퍼 비우기
		
		// 5. 사용자가 문자열을 입력받고 "X"만 입력했을때만 종료 메세지 출력하고 그 외에는 입력한 문자열 출력하기.
		

		// str.length() : 문자열 길이 확인하는 메소드
		// str.charAt(인덱스) : 문자열의 해당 인덱스를 문자형으로 만드는 메소드
		
		while(true) {
			System.out.print("문자열을 입력하세요.(x 또는 X 입력 시에는 종료합니다.)");
			String str = sc.nextLine(); // while문 안에서 계속 반복하여 입력받기.
			
			if(str.equals("X") || str.equals("x") ) { // x 또는 X가 입력되었을때 => 종료하고 출력한다.
				System.out.println("프로그램을 종료합니다."); 
				// 문자열.charAt(0) == 'x' 처럼 사용할수도있지만, 두글자 이상 쓸경우 취지에 맞지 않는다.
				// 길이를 확인하는 메소드 str1.length() == 1을 &&로 추가해주면, str1 문자열의 길이가 1글자인 x 만 이 조건문의 참을 만들 수 있다. 
				break;
			}
			else {
				System.out.println(str);
				continue; // 없어도 되는 문장
			}
			
			
		} // while문 종료
		
		// sc.close();
	} // main문 종료

}
